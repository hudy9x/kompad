.tiptap-container {
  position: relative;
  @apply dark:bg-gray-800;
}
.tiptap-box {
  /* @apply overflow-y-auto; */
}

.pad-infos {
  @apply px-8 pb-8 w-[700px] xl:w-[800px] m-auto;
}

.tiptap-main-content {
  @apply px-8 pt-2 pb-8 w-[700px] xl:w-[800px] m-auto;
  /* height: calc(100vh - 25px - 64px - 225px); */
  font-size: 16px; /* base font size */
}

.fixed-controlbar {
  @apply px-6 py-4 w-[700px] xl:w-[800px] m-auto;
}

.tiptab-format-actions {
  @apply flex flex-nowrap py-2 overflow-x-auto justify-center;
  @apply bg-gray-900 rounded-md;
}

.tiptap-action-group {
  @apply flex justify-center px-2;
}

.character-count {
  @apply px-2 text-center border-t absolute bottom-0 left-0 text-xs;
  width: calc(100% - 2px);
  background-color: var(--common-bg-color);
  border-top-color: var(--common-border-color);
}

.controlbar-container {
  @apply m-auto;
}

.control-icon {
  @apply w-8 h-8 p-2 rounded-md border transition;
  @apply text-gray-600 bg-white hover:bg-gray-50;
  background-color: var(--common-btn-bg-color);
  border-color: var(--common-border-color);
  color: var(--common-text-color);
}

.control-icon:hover{
  background-color: var(--common-btn-bg-hover-color);
}

.controlbar-container .is-active .control-icon,
.controlbar-container .control-icon.is-active {
  background-color: var(--common-btn-bg-active-color);
  border-color: var(--button-border-active-color);
  color: var(--button-text-active-color);
}

.react-component {
	 background: #faf594;
	 border: 3px solid #0d0d0d;
	 border-radius: 0.5rem;
	 margin: 1rem 0;
	 position: relative;
}
 .react-component .label {
	 margin-left: 1rem;
	 background-color: #0d0d0d;
	 font-size: 0.6rem;
	 letter-spacing: 1px;
	 font-weight: bold;
	 text-transform: uppercase;
	 color: #fff;
	 position: absolute;
	 top: 0;
	 padding: 0.25rem 0.75rem;
	 border-radius: 0 0 0.5rem 0.5rem;
}
 .react-component .content {
	 margin-top: 1.5rem;
	 padding: 1rem;
}

.ProseMirror {
	 margin: 1rem 0;
}
 .ProseMirror > * + * {
	 margin-top: 0.75em;
}
 .ProseMirror ul, .ProseMirror ol {
	 padding: 0 1rem;
}
 .ProseMirror h1, .ProseMirror h2, .ProseMirror h3, .ProseMirror h4, .ProseMirror h5, .ProseMirror h6 {
	 line-height: 1.1;
}
 .ProseMirror code {
	 background-color: rgba(97, 97, 97, 0.1);
	 color: #616161;
}
 .ProseMirror pre {
	 background: #0d0d0d;
	 color: #fff;
	 font-family: 'JetBrainsMono', monospace;
	 padding: 0.75rem 1rem;
	 border-radius: 0.5rem;
}
 .ProseMirror pre code {
	 color: inherit;
	 padding: 0;
	 background: none;
	 font-size: 0.8rem;
}
 .ProseMirror img {
	 max-width: 100%;
	 height: auto;
}
 .ProseMirror blockquote {
	 padding-left: 1rem;
	 border-left: 2px solid rgba(13, 13, 13, 0.1);
}
 .ProseMirror hr {
	 border: none;
	 border-top: 2px solid rgba(13, 13, 13, 0.1);
	 margin: 2rem 0;
}
/* Table-specific styling */
 .ProseMirror table {
	 border-collapse: collapse;
	 table-layout: fixed;
	 width: 100%;
	 margin: 0;
	 overflow: hidden;
}
 .ProseMirror table td, .ProseMirror table th {
	 min-width: 1em;
	 border: 2px solid #ced4da;
	 padding: 3px 5px;
	 vertical-align: top;
	 box-sizing: border-box;
	 position: relative;
}
 .ProseMirror table td > *, .ProseMirror table th > * {
	 margin-bottom: 0;
}
 .ProseMirror table th {
	 font-weight: bold;
	 text-align: left;
	 background-color: #f1f3f5;
}
 .ProseMirror table .selectedCell:after {
	 z-index: 2;
	 position: absolute;
	 content: "";
	 left: 0;
	 right: 0;
	 top: 0;
	 bottom: 0;
	 background: rgba(200, 200, 255, 0.4);
	 pointer-events: none;
}
 .ProseMirror table .column-resize-handle {
	 position: absolute;
	 right: -2px;
	 top: 0;
	 bottom: -2px;
	 width: 4px;
	 background-color: #adf;
	 pointer-events: none;
}

.tableWrapper {
   margin-top: 0;
   margin-bottom: 2rem;
	 overflow-x: auto;
}
 .resize-cursor {
	 cursor: ew-resize;
	 cursor: col-resize;
}.ProseMirror {
	 margin: 1rem 0;
}
 .ProseMirror > * + * {
	 margin-top: 0.75em;
}
 .ProseMirror ul, .ProseMirror ol {
	 padding: 0 1rem;
}
 .ProseMirror h1, .ProseMirror h2, .ProseMirror h3, .ProseMirror h4, .ProseMirror h5, .ProseMirror h6 {
	 line-height: 1.1;
}
 .ProseMirror code {
	 background-color: rgba(97, 97, 97, 0.1);
	 color: #616161;
}
 .ProseMirror pre {
	 background: #0d0d0d;
	 color: #fff;
	 font-family: 'JetBrainsMono', monospace;
	 padding: 0.75rem 1rem;
	 border-radius: 0.5rem;
}
 .ProseMirror pre code {
	 color: inherit;
	 padding: 0;
	 background: none;
	 font-size: 0.8rem;
}
 .ProseMirror img {
	 max-width: 100%;
	 height: auto;
}
 .ProseMirror blockquote {
	 padding-left: 1rem;
	 border-left: 2px solid rgba(13, 13, 13, 0.1);
}
 .ProseMirror hr {
	 border: none;
	 border-top: 2px solid rgba(13, 13, 13, 0.1);
	 margin: 2rem 0;
}
/* Table-specific styling */
 .ProseMirror table {
	 border-collapse: collapse;
	 table-layout: fixed;
	 width: 100%;
	 margin: 0;
	 overflow: hidden;
}
 .ProseMirror table td, .ProseMirror table th {
	 min-width: 1em;
	 border: 1px solid #ced4da;
	 padding: 3px 5px;
	 vertical-align: top;
	 box-sizing: border-box;
	 position: relative;
}
 .ProseMirror table td > *, .ProseMirror table th > * {
	 margin-bottom: 0;
}
 .ProseMirror table th {
	 font-weight: bold;
	 text-align: left;
	 background-color: #f1f3f5;
}
 .ProseMirror table .selectedCell:after {
	 z-index: 2;
	 position: absolute;
	 content: "";
	 left: 0;
	 right: 0;
	 top: 0;
	 bottom: 0;
	 background: rgba(200, 200, 255, 0.4);
	 pointer-events: none;
}
 .ProseMirror table .column-resize-handle {
	 position: absolute;
	 right: -2px;
	 top: 0;
	 bottom: -2px;
	 width: 4px;
	 background-color: #adf;
	 pointer-events: none;
}
.resize-cursor {
	 cursor: ew-resize;
	 cursor: col-resize;
}


.column {
  width: 15px;
  height: 15px;
  border: 1px solid rgb(237, 230, 230);
}
.mouse-moving {
  background-color:rgb(147 197 253)!important;
}
